<?xml version="1.0" encoding="UTF-8"?>
<!--

 Xyster Framework
 
 LICENSE
 
 This source file is subject to the new BSD license that is bundled
 with this package in the file LICENSE.txt.
 It is also available through the world-wide-web at this URL:
 http://www.opensource.org/licenses/bsd-license.php
 If you did not receive a copy of the license and are unable to
 obtain it through the world-wide-web, please send an email
 to xyster@devweblog.org so we can send you a copy immediately.

 @copyright Copyright (c) 2007 Irrational Logic (http://devweblog.org)
 @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 @version    $Id$

 Requirements:

 - PHP 5.2.0
 - Phing 2.3.0
 - PHPDocumentor 1.4.0
 - VersionControl_SVN 0.3

 Requirements for running tests:
 - PHPUnit 3.2.0
 - Xdebug 2.0.1

 Usage:

   phing [ <targets> ]

 Targets:

   dist
     Build unit test results and code coverage reports
     This is the default target.

   clean
     Remove staged directory.  Leave svn export directory

   clean.all
     Remove staged directory and svn export directory

-->
<project name="Xyster" default="dist" basedir=".">
  <property name="zf.src.default" value="${project.basedir}/.." />
  <property name="zf.product.name" value="Xyster Framework" />
  <property name="zf.productname" value="xyster" />
  <property name="zf.version" value="02build01" />
  <property name="svn.url" value="https://forge.libreworks.net/svn/xyster" />
  <property name="zf.svn.url" value="${svn.url}/trunk" />
  <property name="zf.svn.tag" value="HEAD" />
  <property name="zf.svn.revision" value="zf.svn.revision" />
  <property name="zf.export.dir" value="./${zf.productname}-export-${zf.svn.tag}" />
  <property name="stage.home" value="${project.basedir}/reports" />
  <property name="phing.style.dir" value="/usr/share/php/data/phing/etc" />
    
    <target name="prepare">
    <mkdir dir="${stage.home}" />
    <mkdir dir="${stage.home}/coverage" />
    <mkdir dir="${stage.home}/tests" />
  </target>

  <target name="source.export" unless="zf.src">
    <svnexport svnpath="svn"
      repositoryurl="${zf.svn.url}"
      todir="${zf.export.dir}" />
    <property name="zf.src" value="${zf.export.dir}" />
  </target>

    <target name="dist" depends="prepare,source.export">
        <echo msg="Running unit tests..." />
        <resolvepath propertyName="absolutePathLibrary" file="${zf.export.dir}/library" />
        <resolvepath propertyName="absolutePathTests" file="${zf.export.dir}/tests" />
        
        <includepath classpath="${absolutePathTests}" />
        <includepath classpath="${absolutePathLibrary}" />
        
    <coverage-setup database="${stage.home}/coverage.db">
      <fileset dir="${zf.export.dir}/library">
        <include name="**/*.php"/>
      </fileset>
    </coverage-setup>
        
    <phpunit codecoverage="true" printsummary="true">
      <batchtest>
        <fileset dir="${zf.export.dir}/tests">
          <include name="**/*Test.php"/>
        </fileset>
      </batchtest>
      <formatter todir="${stage.home}" type="xml" />
    </phpunit>
        
    <phpunitreport infile="${stage.home}/testsuites.xml" format="frames" todir="${stage.home}/tests" styledir="${phing.style.dir}" />
        
    <coverage-report outfile="${stage.home}/coverage.xml">
        <report todir="${stage.home}/coverage" styledir="${phing.style.dir}"/>
    </coverage-report>
    </target>
    
  <target name="clean.all" depends="clean"
    description="Remove staged directory and svn export.">
    <echo msg="Cleaning up svn export..."/>
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${zf.export.dir}" />
    </delete>
  </target>

  <target name="clean"
    description="Remove staged directory.">
    <echo msg="Cleaning up staged files..."/>
    <delete includeemptydirs="true" failonerror="false">
      <fileset dir="${stage.home}" />
    </delete>
  </target>
</project>