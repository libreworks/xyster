<?xml version="1.0" encoding="UTF-8"?>
<sect1 id="xyster.dao.overview">
    <title>Introduction</title>

    <para>According to Wikipedia, a <firstterm>Data Access Object</firstterm> is
        &quot;an object that provides an abstract interface to some type of
        database or persistence mechanism, providing some specific operations
        without exposing details of the database&quot;.</para>

    <para>Xyster includes a model for implementing your own DAOs, along with an
        exception hierarchy that abstracts away ORM-specific exceptions and
        errors. Currently, the framework has implementations for Doctrine 2.
        In the future, we will be adding support for other PHP ORM libraries.</para>
    
    <sect2 id="xyster.dao.overview.exceptions">
        <title>Exception Hierarchy</title>

        <para>One of the features of Xyster's DAO system is the ability for DAOs to translate
            ORM system exceptions. These are the exceptions to which others are translated.</para>

        <itemizedlist>
            <listitem><simpara><interfacename>Xyster\Dao\Exception</interfacename> – The
                base exception interface for the DAO package. All Exceptions
                listed here implement this interface.</simpara></listitem>
            <listitem><simpara><classname>Xyster\Dao\DaoException</classname> – This is
                a generic exception for the DAO system that usually does not correspond
                to an error that occured with the persistence layer. It extends PHP's
                <classname>RuntimeException</classname>.</simpara></listitem>
            <listitem><simpara><interfacename>Xyster\Dao\NonTransientException</interfacename> – The
                base interface for errors which are permanent (the error would occur again if the
                same operation were attempted twice.) The Exceptions listed below
                implement this interface.</simpara>
                <itemizedlist>
                    <listitem><simpara><classname>Xyster\Dao\DataRetrievalException</classname> –
                        Used when there was a problem reading data, for instance a row
                        was expected but none was found. It extends from PHP's
                        <classname>UnexpectedValueException</classname>.</simpara></listitem>
                    <listitem><simpara><classname>Xyster\Dao\InvalidResourceUsageException</classname> –
                        Used when the data store is used improperly, for instance an incorrect
                        query. It extends from PHP's <classname>RuntimeException</classname>.</simpara></listitem>
                </itemizedlist>
            </listitem>
            <listitem><simpara><interfacename>Xyster\Dao\TransientException</interfacename> – The
                base interface for errors which are temporary (the error might not happen again
                if the same operation is attempted twice). The Exceptions listed below
                implement this interface.</simpara>
                <itemizedlist>
                    <listitem><simpara><classname>Xyster\Dao\ConcurrencyException</classname> –
                        Used for concurrency problems, like row locking. It extends
                        from PHP's <classname>RuntimeException</classname>.</simpara></listitem>
                    <listitem><simpara></simpara></listitem>
                </itemizedlist>
            </listitem>
        </itemizedlist>

        <para>The DAOs which support specific libraries may have their own Exceptions as well.</para>
    </sect2>

    <sect2 id="xyster.dao.overview.api">
        <title>DAO Support</title>

        <para>All DAOs are responsible for basic CRUD operations with the data they support (create, read, update, delete).
            The methods that DAOs must implement to support these operations are defined 
            in the <interfacename>Xyster\Dao\Repository</interfacename> interface.
            See the API for specifics.</para>

        <para>A base DAO, <classname>Xyster\Dao\AbstractDao</classname>, is provided
            for library support DAOs to use as a base. It sets up a logger instance
            (or allows for one to be specified), and has a template for DAOs to use
            to check their configuration (e.g. database connection information).</para>
    </sect2>
</sect1>