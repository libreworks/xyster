    <sect1 id="xyster.orm.validate">
        <title>Validation</title>
        
        <para>The first rule of development is never trust data from your users
            (no offense, users).  The ORM layer provides a handy means to hook
            into the <classname>Zend_Validate</classname> API and make your 
            entities validate the information going into them.</para>
            
        <sect2 id="xyster.orm.validate.options">
            <title>Options</title>
            
            <para>Before we dive head-first into creating validation rules for
                the fields on your entity, let's explain the options available
                for the validation system.</para>
                
            <para>You can turn validation off for an entity.  It's on by
                default.  Simply call the <methodname>disableValidation</methodname>
                method on the entity type object.</para>
            
            <programlisting role="php"><![CDATA[<?php
/* @var $mapper PersonMapper */
$type = $mapper->getEntityType('Person');
$type->disableValidation();]]></programlisting>

            <para>You can also specify whether validation occurs after each
                property is set or right before the entity is saved.  By
                default, values are validated as they are set.</para>
                
            <programlisting role="php"><![CDATA[<?php
/* @var $mapper PersonMapper */
$type = $mapper->getEntityType('Person');
$type->validateOnSave();]]></programlisting>
        </sect2>
        
        <sect2 id="xyster.orm.validate.setup">
            <title>Setting up</title>
            
            <para>You can set up validation in the <methodname>init</methodname> 
                method of your mapper class.</para>
        
            <programlisting role="php"><![CDATA[<?php
class PersonMapper extends Xyster_Orm_Mapper
{
        // protected $_domain, etc.

        public function init()
        {
            $this->getEntityType()
                ->addValidator('name', new Zend_Validate_Alnum);
        }
}]]></programlisting>

            <para>When the <code>name</code> property is set, the validator will
                ensure that the value passed contains only alphanumeric
                characters.  If validation fails, an exception is thrown.</para>
        </sect2>
    </sect1>