<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Orm
 * @copyright Copyright (c) 2007-2008 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */
// Call Xyster_Orm_Mapping_ValueTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Orm_Mapping_ValueTest::main');
}
require_once dirname(dirname(dirname(dirname(__FILE__)))) . DIRECTORY_SEPARATOR . 'TestHelper.php';
require_once 'Xyster/Orm/Mapping/Value.php';
require_once 'Xyster/Db/Table.php';
require_once 'Xyster/Orm/Type/Interface.php';

/**
 * Test class for Xyster_Orm_Mapping_Value.
 * Generated by PHPUnit on 2008-07-16 at 19:20:06.
 */
class Xyster_Orm_Mapping_ValueTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Xyster_Orm_Mapping_Value
     */
    protected $object;

    /**
     * @var Xyster_Db_Table
     */
    protected $table;
    
    /**
     * Runs the test methods of this class.
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';
        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Orm_Mapping_ValueTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture
     */
    protected function setUp()
    {
        $this->table = new Xyster_Db_Table('foobar');
        $this->object = new Xyster_Orm_Mapping_Value($this->table);
    }
    
    /**
     * Tests the 'addColumn', 'getColumns', and 'getColumnSpan' methods
     */
    public function testAddAndGetColumns()
    {
        $column = new Xyster_Db_Column('username');
        $this->assertEquals(0, $this->object->getColumnSpan());
        $result = $this->object->addColumn($column);
        $this->assertSame($this->object, $result);
        $this->assertEquals(1, $this->object->getColumnSpan());
        $this->assertEquals($column, current($this->object->getColumns()));
    }

    /**
     * Tests the 'getNullValue' and 'setNullValue' methods
     */
    public function testGetAndSetNullValue()
    {
        $this->assertNull($this->object->getNullValue());
        $this->assertSame($this->object, $this->object->setNullValue('all'));
        $this->assertSame('all', $this->object->getNullValue());
    }
    
    /**
     * Tests the 'getTable' and 'setTable' methods
     */
    public function testGetAndSetTable()
    {
        $this->assertSame($this->table, $this->object->getTable());
        $table = new Xyster_Db_Table('lorem_ipsum');
        $this->assertSame($this->object, $this->object->setTable($table));
        $this->assertSame($table, $this->object->getTable());
    }

    /**
     * Tests the 'getType' and 'setType' methods
     */
    public function testGetAndSetType()
    {
        $type = $this->getMock('Xyster_Orm_Type_Interface');
        $this->assertNull($this->object->getType());
        $this->assertSame($this->object, $this->object->setType($type));
        $this->assertSame($type, $this->object->getType());
    }

    /**
     * Tests the 'isNullable' method
     */
    public function testIsNullable()
    {
        $column = new Xyster_Db_Column('testing');
        $column->setNullable();
        $this->object->addColumn($column);
        $this->assertTrue($this->object->isNullable());
        $column2 = new Xyster_Db_Column('testing');
        $column2->setNullable(false);
        $this->object->addColumn($column2);
        $this->assertFalse($this->object->isNullable());
    }

    /**
     * Tests the 'isSimple' method
     */
    public function testIsSimple()
    {
        $this->assertTrue($this->object->isSimple());
    }
}

// Call Xyster_Orm_Mapping_ValueTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Orm_Mapping_ValueTest::main') {
    Xyster_Orm_Mapping_ValueTest::main();
}
