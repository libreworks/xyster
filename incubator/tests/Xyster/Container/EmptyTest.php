<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Container
 * @copyright Copyright (c) 2007-2008 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */

// Call Xyster_Container_EmptyTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Container_EmptyTest::main');
}

require_once dirname(dirname(dirname(__FILE__))) . DIRECTORY_SEPARATOR . 'TestHelper.php';

require_once 'PHPUnit/Framework.php';
require_once 'Xyster/Container/Empty.php';
require_once 'Xyster/Collection.php';

/**
 * Test class for Xyster_Container_Empty.
 * Generated by PHPUnit on 2008-01-31 at 16:38:21.
 */
class Xyster_Container_EmptyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Xyster_Container_Empty
     */
    protected $object;

    /**
     * Runs the test methods of this class.
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Container_EmptyTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture
     */
    protected function setUp()
    {
        $this->object = new Xyster_Container_Empty;
    }
    
    /**
     * Tests the 'accept' method
     */
    public function testAccept()
    {
        require_once 'Xyster/Container/Visitor/Mock.php';
        // This method actually does nothing, so there's nothing to test
        $this->object->accept(new Xyster_Container_Visitor_Mock);
    }

    /**
     * Tests the 'getComponent' method
     */
    public function testGetComponent()
    {
        $this->assertNull($this->object->getComponent('key'));
    }

    /**
     * Tests the 'getComponents' method
     */
    public function testGetComponents()
    {
        $this->assertSame(Xyster_Collection::emptyList(), $this->object->getComponents());
    }

    /**
     * Tests the 'getComponentAdapter' method
     */
    public function testGetComponentAdapter()
    {
        $this->assertNull($this->object->getComponentAdapter('key'));
    }

    /**
     * Tests the 'getComponentAdapterByType' method
     */
    public function testGetComponentAdapterByType()
    {
        $this->assertNull($this->object->getComponentAdapterByType('ArrayObject'));
    }

    /**
     * Tests the 'getComponentAdapters' method
     */
    public function testGetComponentAdapters()
    {
        $this->assertSame(Xyster_Collection::emptyList(), $this->object->getComponentAdapters());
    }
    
    /**
     * Tests the 'getParent' method
     */
    public function testGetParent()
    {
        $this->assertNull($this->object->getParent());
    }
}

// Call Xyster_Container_EmptyTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Container_EmptyTest::main') {
    Xyster_Container_EmptyTest::main();
}
