<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Container
 * @copyright Copyright (c) 2007-2008 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */

// Call Xyster_Container_Behavior_StoredTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Container_Behavior_StoredTest::main');
}

require_once dirname(__FILE__) . DIRECTORY_SEPARATOR . 'CommonTest.php';

require_once 'PHPUnit/Framework.php';
require_once 'Xyster/Container/Behavior/Stored.php';
require_once 'Xyster/Container/Reference/Simple.php';

/**
 * Test class for Xyster_Container_Behavior_Stored.
 * Generated by PHPUnit on 2008-01-06 at 13:11:22.
 */
class Xyster_Container_Behavior_StoredTest extends Xyster_Container_Behavior_CommonTest
{
    /**
     * @var Xyster_Container_Behavior_Stored
     */
    protected $object;
    
    /**
     * @var Xyster_Container_ReferenceStub
     */
    protected $reference;

    /**
     * Runs the test methods of this class.
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Container_Behavior_StoredTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture
     */
    protected function setUp()
    {
        parent::setUp();
        $this->reference = new Xyster_Container_Reference_Simple;
        $this->object = new Xyster_Container_Behavior_Stored($this->delegate, $this->reference);
    }

    /**
     * Tests the 'flush' method
     */
    public function testFlush()
    {
        $instance = $this->object->getInstance($this->container);
        $this->assertType('ArrayObject', $instance);
        $this->object->flush();
        $this->assertAttributeEquals(null, '_instance', $this->reference);
    }

    /**
     * Tests the 'getInstance' method
     */
    public function testGetInstance()
    {
        $instance = $this->object->getInstance($this->container);
        $this->assertType('ArrayObject', $instance);
        $instance2 = $this->object->getInstance($this->container);
        $this->assertSame($instance, $instance2);
    }
    
    /**
     * Tests the 'getStoredObject' method
     */
    public function testGetStoredObject()
    {
        $this->reference->set('test123');
        $this->assertEquals('test123', $this->object->getStoredObject());
    }
}

// Call Xyster_Container_Behavior_StoredTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Container_Behavior_StoredTest::main') {
    Xyster_Container_Behavior_StoredTest::main();
}
