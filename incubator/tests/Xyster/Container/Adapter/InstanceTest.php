<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Container
 * @copyright Copyright (c) 2007 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */

// Call Xyster_Container_Adapter_InstanceTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Container_Adapter_InstanceTest::main');
}

/**
 * Test helper
 */
require_once dirname(dirname(dirname(dirname(__FILE__)))) . DIRECTORY_SEPARATOR . 'TestHelper.php';

require_once 'PHPUnit/Framework.php';
require_once 'Xyster/Container/Adapter/Instance.php';

/**
 * Test class for Xyster_Container_Adapter_Instance.
 * Generated by PHPUnit on 2007-12-19 at 19:34:08.
 */
class Xyster_Container_Adapter_InstanceTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Xyster_Container_Adapter_Instance
     */
    protected $object;

    protected $_key;
    protected $_instance;
    
    /**
     * Runs the test methods of this class.
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Container_Adapter_InstanceTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture
     */
    protected function setUp()
    {
        $this->_instance = new ArrayObject;
        $this->_key = new ReflectionClass('ArrayObject');
        $this->object = new Xyster_Container_Adapter_Instance($this->_key, $this->_instance);
    }

    /**
     * Tests the 'getInstance' method
     */
    public function testGetInstance()
    {
        require_once 'Xyster/Container.php';
        $this->assertSame($this->_instance, $this->object->getInstance(new Xyster_Container));
    }

    /**
     * Tests the 'verify' method
     */
    public function testVerify()
    {
        require_once 'Xyster/Container.php';
        $this->object->verify(new Xyster_Container);
    }

    /**
     * Tests the 'toString' method
     */
    public function test__toString()
    {
        $this->assertEquals('Instance-' . $this->_key, $this->object->__toString());
    }
}

// Call Xyster_Container_Adapter_InstanceTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Container_Adapter_InstanceTest::main') {
    Xyster_Container_Adapter_InstanceTest::main();
}
