<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage  Xyster_Application
 * @copyright Copyright (c) 2007-2008 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Application_Service_AbstractTest::main');
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

require_once dirname(dirname(dirname(dirname(__FILE__)))) . DIRECTORY_SEPARATOR . 'TestHelper.php';

require_once dirname(dirname(__FILE__)) . '/_files/ExampleService.php';
require_once dirname(dirname(__FILE__)) . '/Service/SecondExampleService.php';
require_once 'Xyster/Application.php';

/**
 * Test class for Xyster_Controller_Plugin_Acl.
 * Generated by PHPUnit on 2007-09-11 at 19:39:03.
 */
class Xyster_Application_Service_AbstractTest extends PHPUnit_Framework_TestCase
{
    /**
     * Service
     * @var ExampleService
     */
    public $service;
    
    /**
     * Runs the test methods of this class.
     * 
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Application_Service_AbstractTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     */
    protected function setUp()
    {
        $this->service = new ExampleService();
        $this->service->init();
    }
    
    /**
     * Tests the 'get' and 'set' application methods
     *
     */
    public function testGetAndSetApplication()
    {
        $app = Xyster_Application::getInstance();
        
        $return = $this->service->setApplication($app);
        
        $this->assertSame($this->service, $return);
        $this->assertSame($app, $this->service->getApplication());
    }
    
    /**
     * Tests the 'getName' method for a class that has no underscores
     *
     */
    public function testGetNameNoUnderscores()
    {
        $name = $this->service->getName();
        
        $this->assertEquals('ExampleService', $name);
    }
    
    /**
     * Tests the 'getName' method for a class that has underscores
     *
     */
    public function testGetNameUnderscores()
    {
        $service = new Xyster_Application_Service_SecondExampleService();
        
        $this->assertEquals('SecondExampleService', $service->getName());
    }
}

// Call Xyster_Application_Service_AbstractTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Application_Service_AbstractTest::main') {
    Xyster_Application_Service_AbstractTest::main();
}
