<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Controller
 * @copyright Copyright (c) 2007-2008 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */
// Call Xyster_Controller_Action_InjectorTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Controller_Action_InjectorTest::main');
}

require_once dirname(dirname(dirname(dirname(__FILE__)))) . DIRECTORY_SEPARATOR . 'TestHelper.php';
require_once 'PHPUnit/Framework.php';
require_once 'Xyster/Container.php';
require_once 'Xyster/Controller/Action/Injector.php';
require_once dirname(dirname(__FILE__)) . '/_files/BarController.php';

/**
 * Test class for Xyster_Controller_Action_Injector.
 * Generated by PHPUnit on 2008-05-28 at 15:55:43.
 */
class Xyster_Controller_Action_InjectorTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Xyster_Controller_Action_Injector
     */
    protected $object;

    /**
     * Runs the test methods of this class.
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';
        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Controller_Action_InjectorTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture
     */
    protected function setUp()
    {
        $type = new Xyster_Type('BarController');
        $this->object = new Xyster_Controller_Action_Injector($type, $type);
    }
    
    /**
     * Tests the basic operation of the class
     */
    public function testInject()
    {
        BarController::$called['baz'] = 0;
        BarController::$called['test'] = 0;
        BarController::$called['setObject'] = 0;
        
        $container = new Xyster_Container;
        $container->addComponent('SplObjectStorage');
        require_once 'Zend/Controller/Request/Simple.php';
        $request = new Zend_Controller_Request_Simple('baz', 'bar', null, array());
        require_once 'Zend/Controller/Response/Cli.php';
        $response = new Zend_Controller_Response_Cli;
        $controller = new BarController($request, $response);
        $this->assertNull($controller->object);
        $this->object->decorateInstance($container, null, $controller);
        $this->assertType('SplObjectStorage', $controller->object);
    }
}

// Call Xyster_Controller_Action_InjectorTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Controller_Action_InjectorTest::main') {
    Xyster_Controller_Action_InjectorTest::main();
}
