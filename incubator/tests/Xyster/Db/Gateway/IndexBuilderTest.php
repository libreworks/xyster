<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Db
 * @copyright Copyright (c) 2007-2008 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */
// Call Xyster_Db_Gateway_IndexBuilderTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Db_Gateway_IndexBuilderTest::main');
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";
require_once dirname(dirname(dirname(dirname(__FILE__)))) . DIRECTORY_SEPARATOR . 'TestHelper.php';
require_once 'Xyster/Db/Gateway/IndexBuilder.php';
require_once 'Xyster/Db/Gateway/Stub.php';

/**
 * Test class for Xyster_Db_Gateway_IndexBuilder.
 * Generated by PHPUnit on 2008-04-21 at 21:30:15.
 */
class Xyster_Db_Gateway_IndexBuilderTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Xyster_Db_Gateway_IndexBuilder
     */
    protected $object;
    
    protected $gateway;

    /**
     * Runs the test methods of this class.
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Db_Gateway_IndexBuilderTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     * @access protected
     */
    protected function setUp()
    {
        $this->gateway = new Xyster_Db_Gateway_Stub;
        $this->object = new Xyster_Db_Gateway_IndexBuilder($this->gateway, 'my_index', 'public');
    }

    /**
     * @todo Implement testExecute().
     */
    public function testExecute()
    {
        $this->markTestIncomplete('Implement testExecute');
    }
    
    /**
     * Tests the 'execute' method without defining any columns
     */
    public function testExecuteWithoutColumn()
    {
        $this->setExpectedException('Xyster_Db_Gateway_Exception');
        $this->object->execute();
    }

    /**
     * Tests the 'fulltext' method
     */
    public function testFulltext()
    {
        $this->assertFalse($this->object->isFulltext());
        $this->object->fulltext();
        $this->assertTrue($this->object->isFulltext());
        $this->object->fulltext(false);
        $this->assertFalse($this->object->isFulltext());
    }

    /**
     * Tests the 'on' method
     */
    public function testOn()
    {
        $table = 'my_table_name';
        $columns = array(
                'foo',
                'bar' => 'DESC',
                'foobar' => 'asc',
                'test'
            );
        $expected = array(
                'foo' => 'ASC',
                'bar' => 'DESC',
                'foobar' => 'ASC',
                'test' => 'ASC'
            );
        $this->object->on($table, $columns);
        $this->assertEquals($table, $this->object->getTable());
        $this->assertEquals($expected, $this->object->getColumns());
    }

    /**
     * Tests the unique method
     */
    public function testUnique()
    {
        $this->assertFalse($this->object->isUnique());
        $this->object->unique();
        $this->assertTrue($this->object->isUnique());
        $this->object->unique(false);
        $this->assertFalse($this->object->isUnique());
    }
}

// Call Xyster_Db_Gateway_IndexBuilderTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Db_Gateway_IndexBuilderTest::main') {
    Xyster_Db_Gateway_IndexBuilderTest::main();
}
