<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Db
 * @copyright Copyright (c) 2007-2008 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */
// Call Xyster_Db_TableTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Db_TableTest::main');
}
require_once dirname(dirname(dirname(__FILE__))) . DIRECTORY_SEPARATOR . 'TestHelper.php';
require_once 'Xyster/Db/Table.php';

/**
 * Test class for Xyster_Db_Table.
 * Generated by PHPUnit on 2008-07-09 at 12:08:33.
 */
class Xyster_Db_TableTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Xyster_Db_Table
     */
    protected $object;

    /**
     * Runs the test methods of this class.
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';
        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Db_TableTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture
     */
    protected function setUp()
    {
        $this->object = new Xyster_Db_Table;
    }

    /**
     * Tests the 'addIndex' and 'getIndex' methods
     */
    public function testAddAndGetIndex()
    {
        $ix = new Xyster_Db_Index;
        $ix->setName('foobar');
        $this->assertSame($this->object, $this->object->addIndex($ix));
        $this->assertSame($ix, $this->object->getIndex('foobar'));
        $this->assertNull($this->object->getIndex('not-there'));
        
        $this->setExpectedException('Xyster_Db_Exception', 'Index already exists: foobar');
        $this->object->addIndex($ix);
    }
    
    /**
     * Tests the 'addForeignKey' and 'getForeignKey' methods
     */
    public function testAddAndGetForeignKey()
    {
        $fk = new Xyster_Db_ForeignKey;
        $fk->setName('foobar');
        $this->assertSame($this->object, $this->object->addForeignKey($fk));
        $this->assertSame($fk, $this->object->getForeignKey('foobar'));
        $this->assertNull($this->object->getForeignKey('not-there'));
        
        $this->setExpectedException('Xyster_Db_Exception', 'Foreign key already exists: foobar');
        $this->object->addForeignKey($fk);
    }
    
    /**
     * Tests the 'addUniqueKey' and 'getUniqueKey' methods
     */
    public function testAddAndGetUniqueKey()
    {
        $uk = new Xyster_Db_UniqueKey;
        $uk->setName('foobar');
        $this->assertSame($this->object, $this->object->addUniqueKey($uk));
        $this->assertSame($uk, $this->object->getUniqueKey('foobar'));
        $this->assertNull($this->object->getUniqueKey('not-there'));
        
        $this->setExpectedException('Xyster_Db_Exception', 'Unique key already exists: foobar');
        $this->object->addUniqueKey($uk);
    }
    
    /**
     * Tests the 'getForeignKeys' method
     */
    public function testGetForeignKeys()
    {
        $fk = new Xyster_Db_ForeignKey;
        $fk->setName('foobar');
        $this->assertType('array', $this->object->getForeignKeys());
        $this->object->addForeignKey($fk);
        $this->assertContains($fk, $this->object->getForeignKeys());
    }
    
    /**
     * Tests the 'getIndexes' method
     */
    public function testGetIndexes()
    {
        $ix = new Xyster_Db_Index;
        $ix->setName('foobar');
        $this->assertType('array', $this->object->getIndexes());
        $this->object->addIndex($ix);
        $this->assertContains($ix, $this->object->getIndexes());
    }
    
    /**
     * Tests the 'getOption' and 'setOption' methods
     */
    public function testGetAndSetOption()
    {
        $this->assertSame($this->object, $this->object->setOption('foo', 'bar'));
        $this->assertEquals('bar', $this->object->getOption('foo'));
    }

    /**
     * Tests the 'getOptions' method
     */
    public function testGetOptions()
    {
        $this->assertType('array', $this->object->getOptions());
    }

    /**
     * Tests the 'getPrimaryKey' and 'setPrimaryKey' methods
     */
    public function testGetAndSetPrimaryKey()
    {
        $pk = new Xyster_Db_PrimaryKey;
        $this->assertSame($this->object, $this->object->setPrimaryKey($pk));
        $this->assertSame($pk, $this->object->getPrimaryKey());
    }

    /**
     * Tests the 'getSchema' and 'setSchema' methods
     */
    public function testGetAndSetSchema()
    {
        $this->assertSame($this->object, $this->object->setSchema('foobar'));
        $this->assertEquals('foobar', $this->object->getSchema());
    }
    
    /**
     * Tests the 'getUniqueKeys' method
     */
    public function testGetUniqueKeys()
    {
        $uk = new Xyster_Db_UniqueKey;
        $uk->setName('foobar');
        $this->assertType('array', $this->object->getUniqueKeys());
        $this->object->addUniqueKey($uk);
        $this->assertContains($uk, $this->object->getUniqueKeys());
    }
}

// Call Xyster_Db_TableTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Db_TableTest::main') {
    Xyster_Db_TableTest::main();
}
