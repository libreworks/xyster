<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Db
 * @copyright Copyright (c) 2007-2008 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */
// Call Xyster_Db_ColumnOwnerTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Db_ColumnOwnerTest::main');
}
require_once dirname(dirname(dirname(__FILE__))) . DIRECTORY_SEPARATOR . 'TestHelper.php';
require_once 'Xyster/Db/ColumnOwner.php';

/**
 * Test class for Xyster_Db_ColumnOwner.
 * Generated by PHPUnit on 2008-07-08 at 23:45:56.
 */
class Xyster_Db_ColumnOwnerTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Xyster_Db_ColumnOwner
     */
    protected $object;

    /**
     * Runs the test methods of this class.
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';
        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Db_ColumnOwnerTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture
     */
    protected function setUp()
    {
        $this->object = new Xyster_Db_ColumnOwnerTest_Stub;
    }

    /**
     * Tests the 'addColumn' and 'containsColumn' methods
     */
    public function testAddAndContainsColumn()
    {
        $column = new Xyster_Db_Column('foobar');
        $this->assertFalse($this->object->containsColumn($column));
        $this->object->addColumn($column);
        $this->assertTrue($this->object->containsColumn($column));
        $column2 = new Xyster_Db_Column('FOOBAR');
        $this->assertTrue($this->object->containsColumn($column2));
    }

    /**
     * Tests the 'getColumn' method
     */
    public function testGetColumn()
    {
        $column = new Xyster_Db_Column('foo');
        $this->object->addColumn($column);
        $column2 = new Xyster_Db_Column('bar');
        $this->object->addColumn($column2);
        $this->assertSame($column, $this->object->getColumn(0));
        $this->assertSame($column2, $this->object->getColumn(1));
    }

    /**
     * Tests the 'getColumns' method
     */
    public function testGetColumns()
    {
        $columns = $this->object->getColumns();
        $this->assertType('array', $columns);
    }

    /**
     * Tests the 'getColumnSpan' method
     */
    public function testGetColumnSpan()
    {
        $this->assertEquals(0, $this->object->getColumnSpan());
        $column = new Xyster_Db_Column('foo');
        $this->object->addColumn($column);
        $this->assertEquals(1, $this->object->getColumnSpan());
        $column = new Xyster_Db_Column('bar');
        $this->object->addColumn($column);
        $this->assertEquals(2, $this->object->getColumnSpan());
    }

    /**
     * Tests the 'getName' and 'setName' methods
     */
    public function testGetAndSetName()
    {
        $this->assertSame($this->object, $this->object->setName('foobar'));
        $this->assertEquals('foobar', $this->object->getName());
    }
}

class Xyster_Db_ColumnOwnerTest_Stub extends Xyster_Db_ColumnOwner
{    
}

// Call Xyster_Db_ColumnOwnerTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Db_ColumnOwnerTest::main') {
    Xyster_Db_ColumnOwnerTest::main();
}
