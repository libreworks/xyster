<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Collection
 * @copyright Copyright (c) 2007-2008 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */
// Call Xyster_Collection_Map_FixedTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Collection_Map_FixedTest::main');
}
require_once dirname(dirname(dirname(dirname(__FILE__)))) . DIRECTORY_SEPARATOR . 'TestHelper.php';
require_once 'Xyster/Collection/Map/Fixed.php';
require_once 'Xyster/Collection/Map.php';

/**
 * Test class for Xyster_Collection_Map_Fixed.
 * Generated by PHPUnit on 2008-07-16 at 14:18:03.
 */
class Xyster_Collection_Map_FixedTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Xyster_Collection_Map_Fixed
     */
    protected $object;

    /**
     * Runs the test methods of this class.
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';
        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Collection_Map_FixedTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture
     */
    protected function setUp()
    {
        $this->object = new Xyster_Collection_Map_Fixed(new Xyster_Collection_Map);
    }

    /**
     * Tests the 'clear' method
     */
    public function testClear()
    {
        $this->setExpectedException('Xyster_Collection_Exception', 'This collection cannot be changed');
        $this->object->clear();
    }

    /**
     * Tests the 'merge' method
     */
    public function testMerge()
    {
        $this->setExpectedException('Xyster_Collection_Exception', 'This collection cannot be changed');
        $this->object->merge(new Xyster_Collection_Map);
    }

    /**
     * Tests the 'offsetSet' method
     */
    public function testOffsetSet()
    {
        $this->setExpectedException('Xyster_Collection_Exception', 'This collection cannot be changed');
        $this->object->offsetSet(0, 0);
    }

    /**
     * Tests the 'offsetUnset' method
     */
    public function testOffsetUnset()
    {
        $this->setExpectedException('Xyster_Collection_Exception', 'This collection cannot be changed');
        $this->object->offsetUnset(0);
    }

    /**
     * Tests the 'remove' method
     */
    public function testRemove()
    {
        $this->setExpectedException('Xyster_Collection_Exception', 'This collection cannot be changed');
        $this->object->remove(0);
    }

    /**
     * Tests the 'set' method
     */
    public function testSet()
    {
        $this->setExpectedException('Xyster_Collection_Exception', 'This collection cannot be changed');
        $this->object->set(0, 0);
    }
}

// Call Xyster_Collection_Map_FixedTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Collection_Map_FixedTest::main') {
    Xyster_Collection_Map_FixedTest::main();
}
