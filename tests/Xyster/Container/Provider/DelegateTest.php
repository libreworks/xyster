<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Container
 * @copyright Copyright (c) Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */
require_once dirname(dirname(dirname(dirname(__FILE__)))) . DIRECTORY_SEPARATOR . 'TestHelper.php';
require_once 'Xyster/Container.php';
require_once 'Xyster/Container/Provider/Delegate.php';
require_once 'Xyster/Container/Injector/Standard.php';
require_once 'Xyster/Collection.php';

/**
 * Test class for Xyster_Container_Provider_Delegate.
 * Generated by PHPUnit on 2009-06-14 at 19:17:26.
 */
class Xyster_Container_Provider_DelegateTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Xyster_Container_Provider_Delegate
     */
    protected $object;

    /**
     * Sets up the fixture
     */
    protected function setUp()
    {
        $this->object = new Xyster_Container_Provider_DelegateTest_Impl(
            new Xyster_Container_Injector_Standard(
                Xyster_Container::definition('Xyster_Collection', 'colly')));
    }

    public function testGetName()
    {
        self::assertEquals('colly', $this->object->getName());
    }

    public function testGetType()
    {
        self::assertEquals(new Xyster_Type('Xyster_Collection'), $this->object->getType());
    }

    public function testValidate()
    {
        $this->object->validate(new Xyster_Container);
    }

    public function test__toString()
    {
        self::assertEquals('Impl:Injector:colly', $this->object->__toString());
    }
}

class Xyster_Container_Provider_DelegateTest_Impl extends Xyster_Container_Provider_Delegate
{
    public function get(Xyster_Container_IContainer $container, Xyster_Type $into = null)
    {
        return null;
    }
    
    public function getLabel()
    {
        return 'Impl';
    }
}
