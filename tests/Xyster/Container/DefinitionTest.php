<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Container
 * @copyright Copyright (c) Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */
require_once dirname(dirname(dirname(__FILE__))) . DIRECTORY_SEPARATOR . 'TestHelper.php';
require_once 'Xyster/Container/Definition.php';

/**
 * Test class for Xyster_Container_Definition.
 * Generated by PHPUnit on 2009-06-05 at 09:15:10.
 */
class Xyster_Container_DefinitionTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Xyster_Container_Definition
     */
    protected $object;

    /**
     * Sets up the fixture
     */
    protected function setUp()
    {
        $this->object = new Xyster_Container_Definition("Xyster_Container_Definition", "foobar");
    }

    public function testConstructorArg()
    {
        self::assertSame($this->object, $this->object->constructorArg("foo"));
        self::assertSame($this->object, $this->object->constructorArg("bar"));
        self::assertEquals(array("foo","bar"), $this->object->getConstructorArgs());
    }

    public function testDependsOn()
    {
        self::assertSame($this->object, $this->object->dependsOn("stuff","foo"));
        self::assertSame($this->object, $this->object->dependsOn("other","bar"));
        self::assertEquals(array("stuff"=>"foo","other"=>"bar"), $this->object->getDependsOn());
    }

    public function testGetName()
    {
        self::assertEquals("foobar", $this->object->getName());
    }

    public function testGetType()
    {
        $type = $this->object->getType();
        self::assertType('Xyster_Type', $type);
        self::assertEquals(new Xyster_Type('Xyster_Container_Definition'), $type);
    }

    public function testInitMethod()
    {
        self::assertSame($this->object, $this->object->initMethod("getName"));
        self::assertEquals("getName", $this->object->getInitMethod());
    }

    public function testProperty()
    {
        self::assertSame($this->object, $this->object->property("stuff","foo"));
        self::assertSame($this->object, $this->object->property("other","bar"));
        self::assertEquals(array("stuff"=>"foo","other"=>"bar"), $this->object->getProperties());
    }
}