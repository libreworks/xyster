<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Data
 * @copyright Copyright (c) 2007-2008 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */

// Call Xyster_Data_Binder_SetterTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Data_Binder_SetterTest::main');
}

require_once dirname(dirname(dirname(dirname(__FILE__)))) . DIRECTORY_SEPARATOR . 'TestHelper.php';
require_once 'PHPUnit/Framework.php';
require_once 'Xyster/Data/Binder/Setter.php';

/**
 * Test class for Xyster_Data_Binder_Setter.
 * Generated by PHPUnit on 2008-05-06 at 20:21:15.
 */
class Xyster_Data_Binder_SetterTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var    Xyster_Data_Binder_Setter
     */
    protected $object;

    /**
     * Runs the test methods of this class.
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';
        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Data_Binder_SetterTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture
     */
    protected function setUp()
    {
        $this->object = new Xyster_Data_Binder_Setter;
    }

    /**
     * Tests the 'set' method with an object property
     */
    public function testSetObjectProperty()
    {
        $object = new Xyster_Data_Binder_SetterTest_Example;
        $this->object->set($object, 'foo', 'bar');
        $this->assertAttributeEquals('bar', 'foo', $object); 
    }

    /**
     * Tests the 'set' method with an object setter method
     */
    public function testSetObjectMethod()
    {
        $object = new Xyster_Data_Binder_SetterTest_Example;
        $this->object->set($object, 'color', 'green');
        $this->assertAttributeEquals('green', 'color', $object); 
    }
    
    /**
     * Tests the 'set' method with an arrayAccess
     */
    public function testSetArrayAccess()
    {
        $target = new Xyster_Data_Binder_SetterTest_Example;
        $this->object->set($target, 'lorem', 'ipsum');
        $this->assertEquals('ipsum', $target['lorem']);
    }
    
    /**
     * Tests that only an object can be passed to the setter
     *
     */
    public function testSetException()
    {
        $this->setExpectedException('Xyster_Data_Binder_Setter_Exception');
        $this->object->set('obviously a string', 'foo', 'bar');
    }
}

class Xyster_Data_Binder_SetterTest_Example implements ArrayAccess
{
    public $foo = null;
    
    protected $_values = array();
    
    public function setColor( $value )
    {
        $this->color = $value;
    }
    
    public function offsetSet($offset, $value)
    {
        $this->_values[$offset] = $value;
    }
    
    public function offsetGet($offset)
    {
        return $this->_values[$offset];
    }
    
    public function offsetUnset($offset)
    {
        unset($this->_values[$offset]);
    }
    
    public function offsetExists($offset)
    {
        return array_key_exists($offset, $this->_values);
    }
}

// Call Xyster_Data_Binder_SetterTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Data_Binder_SetterTest::main') {
    Xyster_Data_Binder_SetterTest::main();
}
