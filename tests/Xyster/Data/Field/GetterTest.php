<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Data
 * @copyright Copyright (c) 2007-2008 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */
// Call Xyster_Data_Field_GetterTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Data_Field_GetterTest::main');
}
require_once dirname(dirname(dirname(dirname(__FILE__)))) . DIRECTORY_SEPARATOR . 'TestHelper.php';
require_once 'Xyster/Data/Field/Getter.php';

/**
 * Test class for Xyster_Data_Field_Getter.
 * Generated by PHPUnit on 2008-07-15 at 16:03:17.
 */
class Xyster_Data_Field_GetterTest extends PHPUnit_Framework_TestCase
{
    /**
     * Runs the test methods of this class.
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';
        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Data_Field_GetterTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Tests the 'evaluate' method with a bad name
     */
    public function testEvaluateBadName()
    {
        $this->setExpectedException('Xyster_Data_Exception');
        Xyster_Data_Field_Getter::get(array('firstname'=>'Bob'), 'lastname');
    }
    
    /**
     * Tests the evaluate method with a bad param
     */
    public function testEvaluateBadParam()
    {
        $this->setExpectedException('Xyster_Data_Exception');
        Xyster_Data_Field_Getter::get(1234, 'foobar');
    }
    
    /**
     * Tests the 'evaluate' method
     */
    public function testEvaluate()
    {
        $getter = new Xyster_Data_Field_Getter('foobar');
        
        $obj2 = new Xyster_Data_Field_GetterTest_Array;
        $obj3 = new Xyster_Data_Field_GetterTest_Bean;
        $obj = new stdClass;
        $obj->foobar = 'test123';
        
        $tests = array(
            array('foobar'=>'test123'),
            $obj,
            $obj2,
            $obj3
        );
        foreach( $tests as $test ) {
            $this->assertEquals('test123', $getter->evaluate($test));
        }
        
        $getter = new Xyster_Data_Field_Getter('foobarMethod(123)');
        $this->assertEquals('test123', $getter->evaluate($obj2));
    }

    /**
     * Tests the 'get' method
     */
    public function testGet()
    {
        $array = array('foobar' => 'Hello, world!');
        $this->assertEquals($array['foobar'], Xyster_Data_Field_Getter::get($array, 'foobar'));
    }
}

class Xyster_Data_Field_GetterTest_Bean
{
    public function getFoobar()
    {
        return 'test123';
    }
}

class Xyster_Data_Field_GetterTest_Array implements ArrayAccess
{
    public function foobarMethod()
    {
        return 'test123';
    }
    function offsetSet($offset, $value)
    {
        
    }
    function offsetGet($offset)
    {
        return 'test123';
    }
    function offsetUnset($offset)
    {
    }
    function offsetExists($offset)
    {
        return true;   
    }
}

// Call Xyster_Data_Field_GetterTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Data_Field_GetterTest::main') {
    Xyster_Data_Field_GetterTest::main();
}
