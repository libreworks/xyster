<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   Xyster_Controller
 * @subpackage   UnitTests
 * @copyright Copyright (c) 2007-2008 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Controller_Request_ResourceTest::main');
}

require_once "PHPUnit/Framework/TestCase.php";
require_once "PHPUnit/Framework/TestSuite.php";

require_once dirname(dirname(dirname(dirname(__FILE__)))) . DIRECTORY_SEPARATOR . 'TestHelper.php';

require_once 'Xyster/Controller/Request/Resource.php';
require_once 'Zend/Controller/Request/Http.php';

/**
 * Test class for Xyster_Controller_Request_Resource.
 * Generated by PHPUnit on 2007-09-12 at 19:50:59.
 */
class Xyster_Controller_Request_ResourceTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Zend_Controller_Request_Http
     */
    protected $_request;
    
    /**
     * Runs the test methods of this class.
     * 
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Controller_Request_ResourceTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     *
     */
    protected function setUp()
    {
        $request = new Zend_Controller_Request_Http();
        $request->setModuleName('foo');
        $request->setControllerName('bar');
        $request->setActionName('baz');
        
        $this->_request = $request;
    }

    /**
     * Tests creating a resource from a request object
     * 
     */
    public function testCreate()
    {
        $resource = Xyster_Controller_Request_Resource::create($this->_request);
        $this->assertType('Xyster_Controller_Request_Resource', $resource);
    }

    /**
     * Tests the get* methods
     * 
     */
    public function testGetMethods()
    {
        $resource = Xyster_Controller_Request_Resource::create($this->_request);
        
        $request = $this->_request;
        $this->assertEquals($request->getModuleName(), $resource->getModule());
        $this->assertEquals($request->getControllerName(), $resource->getController());
        $this->assertEquals($request->getActionName(), $resource->getAction());
    }

    /**
     * Tests the getResourceId method
     * 
     */
    public function testGetResourceId()
    {
        $resource = Xyster_Controller_Request_Resource::create($this->_request);
        
        $this->assertEquals('MVC:foo/bar/baz', $resource->getResourceId());
    }

    /**
     * Tests the toString method
     * 
     */
    public function testToString()
    {
        $resource = Xyster_Controller_Request_Resource::create($this->_request);
        
        $this->assertEquals('MVC:foo/bar/baz', (string)$resource);
    }
}

// Call Xyster_Controller_Request_ResourceTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Controller_Request_ResourceTest::main') {
    Xyster_Controller_Request_ResourceTest::main();
}
