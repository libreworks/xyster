<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Orm
 * @copyright Copyright (c) 2007-2008 Irrational Logic (http://irrationallogic.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */
// Call Xyster_Orm_Entity_Lookup_DateTest::main() if this source file is executed directly.
if (!defined('PHPUnit_MAIN_METHOD')) {
    define('PHPUnit_MAIN_METHOD', 'Xyster_Orm_Entity_Lookup_DateTest::main');
}
require_once dirname(dirname(dirname(__FILE__))) . DIRECTORY_SEPARATOR . 'TestSetup.php';
require_once 'PHPUnit/Framework.php';
require_once 'Xyster/Orm/Entity/Lookup/Date.php';

/**
 * Test class for Xyster_Orm_Entity_Lookup_Date.
 * Generated by PHPUnit on 2008-05-14 at 19:34:30.
 */
class Xyster_Orm_Entity_Lookup_DateTest extends Xyster_Orm_TestSetup
{
    /**
     * @var    Xyster_Orm_Entity_Lookup_Date
     */
    protected $object;

    /**
     * Runs the test methods of this class.
     */
    public static function main()
    {
        require_once 'PHPUnit/TextUI/TestRunner.php';

        $suite  = new PHPUnit_Framework_TestSuite('Xyster_Orm_Entity_Lookup_DateTest');
        $result = PHPUnit_TextUI_TestRunner::run($suite);
    }

    /**
     * Sets up the fixture
     */
    public function setUp()
    {
        $mf = $this->_mockFactory();
        $this->object = new Xyster_Orm_Entity_Lookup_Date($mf->getEntityType('MockBug'), 'createdOn');
    }

    /**
     * Tests the 'getName' method
     */
    public function testGetName()
    {
        $this->assertEquals('createdOnDate', $this->object->getName());
    }
    
    /**
     * Tests the 'getEntityType' method
     */
    public function testGetEntityType()
    {
        $type = $this->object->getEntityType();
        $this->assertType('Xyster_Orm_Entity_Type', $type);
        $this->assertEquals('MockBug', $type->getName());
    }
    
    /**
     * Tests the 'getType' method
     */
    public function testGetType()
    {
        $type = $this->object->getType();
        $this->assertType('Xyster_Type', $type);
        $this->assertEquals('Zend_Date', $type->getName());
    }

    /**
     * Tests the 'get' method
     */
    public function testGet()
    {
        $entity = $this->_getMockEntity();
        $date = $this->object->get($entity);
        $this->assertType('Zend_Date', $date);
        $this->assertEquals(new Zend_Date($entity->createdOn), $date);
        
        $entity->createdOn = null;
        $this->assertNull($this->object->get($entity));
    }

    /**
     * Tests the 'getLocale' and 'setLocale' methods
     */
    public function testGetAndSetLocale()
    {
        require_once 'Zend/Locale.php';
        $locale = new Zend_Locale('en_US');
        $this->object->setLocale($locale);
        $this->assertSame($locale, $this->object->getLocale());
    }
    
    /**
     * Tests the 'set' method
     */
    public function testSet()
    {
        $entity = $this->_getMockEntity();
        $date = new Zend_Date();
        $this->object->set($entity, $date);
        $this->assertEquals($date->get(Zend_Date::ISO_8601), $entity->createdOn);
        
        $this->object->set($entity, null);
        $this->assertNull($entity->createdOn);
    }
}

// Call Xyster_Orm_Entity_Lookup_DateTest::main() if this source file is executed directly.
if (PHPUnit_MAIN_METHOD == 'Xyster_Orm_Entity_Lookup_DateTest::main')
{
    Xyster_Orm_Entity_Lookup_DateTest::main();
}
