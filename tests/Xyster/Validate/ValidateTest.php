<?php
/**
 * Xyster Framework
 *
 * This source file is subject to the new BSD license that is bundled
 * with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.opensource.org/licenses/bsd-license.php
 *
 * @category  Xyster
 * @package   UnitTests
 * @subpackage Xyster_Type
 * @copyright Copyright LibreWorks, LLC (http://libreworks.net)
 * @license   http://www.opensource.org/licenses/bsd-license.php New BSD License
 * @version   $Id$
 */
namespace XysterTest\Validate;
use Xyster\Validate\Validate;
/**
 * Test class for Xyster_Validate.
 * Generated by PHPUnit on 2008-06-07 at 16:11:11.
 */
class ValidateTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var    Validate
     */
    protected $object;

    /**
     * Sets up the fixture
     */
    protected function setUp()
    {
        $this->object = new Validate;
    }

    /**
     * Tests the 'addValidator' class
     */
    public function testAddValidator()
    {
        $validator = new \Zend_Validate_Alnum(true);
        $return = $this->object->addValidator($validator, true, true);
        $this->assertSame($this->object, $return);
        $expected = array(
                array(
                    'instance' => $validator,
                    'breakChainOnFailure' => true,
                    'allowEmpty' => true
                )
            );
        $this->assertAttributeEquals($expected, '_validators', $this->object);
    }

    /**
     * Tests the 'isValid' class
     */
    public function testIsValid()
    {
        $validator = new \Zend_Validate_Alnum(true);
        $this->object->addValidator($validator);
        $this->assertTrue($this->object->isValid('aoeu1234'));
        $this->assertFalse($this->object->isValid(''));
    }
    
    /**
     * Tests the 'isValid' class when the allowEmpty parameter is specified
     */
    public function testIsValidAllowEmpty()
    {
        $validator = new \Zend_Validate_Alnum(true);
        $this->object->addValidator($validator, true, true);
        $this->assertTrue($this->object->isValid('aoeu1234'));
        $this->assertTrue($this->object->isValid(''));
    }
}
